@model Recipes.Models.Comment

@{
    ViewBag.Title = "Edit";
    List<SelectListItem> scoreList = new List<SelectListItem>() {
new SelectListItem { Text = "1", Value = "1" },
new SelectListItem { Text = "2", Value = "2" },
new SelectListItem { Text = "3", Value = "3" },
new SelectListItem { Text = "4", Value = "4" },
new SelectListItem { Text = "5", Value = "5" },
new SelectListItem { Text = "6", Value = "6" },
new SelectListItem { Text = "7", Value = "7" },
new SelectListItem { Text = "8", Value = "8" },
new SelectListItem { Text = "9", Value = "9" },
new SelectListItem { Text = "10", Value = "10" }};
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.RecipeId, "RecipeID")

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Score, "Score", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Score, scoreList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-actions no-color">
            <input type="submit" value="Save" class="btn btn-default" /> |
            @Html.ActionLink("Back to List", "Index", "Recipes")
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
